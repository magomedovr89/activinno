from aiogram.types import ContentType
from aiogram import Bot, Dispatcher, types
from aiogram.utils import executor
from os import environ as env
from sql_base import *

bot = Bot(token=env['TOKEN'], parse_mode='HTML')
dp = Dispatcher(bot)


@dp.message_handler(commands=['start'])
async def bot_text(message: types.Message) -> bot.send_message:
    cur.execute("SELECT telegram_id FROM homework")
    if message.from_user.id not in [user[0] for user in cur.fetchall()]:
        insert(message)
        return await message.answer(text=f'–ü—Ä–∏–≤–µ—Ç, <b>{message.from_user.first_name}</b>üñê\n–Ø –±–æ—Ç - –¥–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ!\n'
                                         f'–Ø –∑–∞–Ω–µ—Å —Ç–µ–±—è –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö\n')
    else:
        return await message.answer(text=f'–ü—Ä–∏–≤–µ—Ç, <b>{message.from_user.first_name}</b> üñê\n'
                                         f'–í–∏–∂—É —Ç–µ–±—è –≤ –±–∞–∑–µ! üòÅ')


@dp.message_handler(content_types=ContentType.ANY)
async def bot_any(message: types.Message) -> bot.send_message:
    return await message.answer(
        text=f'–Ø –ø–æ–Ω–∏–º–∞—é —Ç–æ–ª—å–∫–æ –∫–æ–º–∞–Ω–¥—É "/start", '
             f'{message.from_user.first_name}\n'
             f'¬Ø\_(„ÉÑ)_/¬Ø',
    )

if __name__ == '__main__':
    executor.start_polling(dp)
